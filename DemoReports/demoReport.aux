\relax 
\providecommand\hyper@newdestlabel[2]{}
\bbl@cs{beforestart}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\babel@aux{british}{}
\@writefile{toc}{\contentsline {paragraph}{Task~a: Model.}{1}{section*.2}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~b: Implementation.}{2}{section*.3}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~c: 10 Zones.}{2}{section*.4}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~d: 20 Zones.}{2}{section*.5}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~e: 40 Zones.}{2}{section*.6}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~f: 80 Zones.}{2}{section*.7}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~g: 120 Zones.}{2}{section*.8}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~h: 250 Zones.}{2}{section*.9}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~i: Brute-Force Algorithm.}{2}{section*.10}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Service station location: runtime (in seconds), objective value, and optimality gap (in percent; positive if an optimal solution was not found and proven before timing out) using~{\color  {blue}Gurobi}\xspace  , with a timeout of ${\color  {blue}300.00}$~CPU seconds. The right-most column gives the number of candidate solutions the brute-force search algorithm has to examine per second in order to match the runtime performance of~{\color  {blue}Gurobi}\xspace  , if the instance was solved to proven optimality, and~`n/a' for `non-applicable' otherwise. {\color  {blue}(The sample performance of this demo report is made up, except for the two optimal objective values!)} }}{3}{table.1}\protected@file@percent }
\newlabel{tab:res:mip}{{1}{3}{Service station location: runtime (in seconds), objective value, and optimality gap (in percent; positive if an optimal solution was not found and proven before timing out) using~\SolverMIP , with a timeout of $\TimeoutMIP $~CPU seconds. The right-most column gives the number of candidate solutions the brute-force search algorithm has to examine per second in order to match the runtime performance of~\SolverMIP , if the instance was solved to proven optimality, and~`n/a' for `non-applicable' otherwise. \todo {(The sample performance of this demo report is made up, except for the two optimal objective values!)}}{table.1}{}}
\citation{ASTRA:AOC}
\newlabel{eq:lb}{{1}{4}{Problem 2: Stochastic Local Search (SLS)}{equation.0.1}{}}
\@writefile{toc}{\contentsline {paragraph}{Task~a: SLS Algorithm.}{4}{section*.12}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces {\color  {blue}Wall Street (\copyright  \ www.forbes.com, 2014)}}}{4}{figure.1}\protected@file@percent }
\newlabel{fig:wallStreet}{{1}{4}{\todo {Wall Street (\copyright \ www.forbes.com, 2014)}}{figure.1}{}}
\@writefile{toc}{\contentsline {paragraph}{Task~b: Implementation.}{5}{section*.13}\protected@file@percent }
\@writefile{toc}{\contentsline {paragraph}{Task~c: Experiments.}{5}{section*.14}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Investment design: median runtime (in seconds), median number of steps, and median achieved~$\lambda $, for {\color  {blue}two} configurations of values for the local-search parameters~{\color  {blue}$\alpha $ and~$\beta $}, over~${\color  {blue}5}$~independent runs per instance, with a timeout of ${\color  {blue}300.0}$~CPU seconds per run. The right-most column gives the number of candidate solutions the outlined exact algorithm has to examine per second in order to match the runtime performance of the seemingly best configuration of values for the local-search parameters, namely {\color  {blue}$\langle \alpha ,\beta \rangle =\langle 20,8\rangle $}, if the instance was solved to proven optimality, and `n/a' for `non-applicable' otherwise. {\color  {blue}(The sample performance of this demo report is made up!)} }}{6}{table.2}\protected@file@percent }
\newlabel{tab:res:sls}{{2}{6}{Investment design: median runtime (in seconds), median number of steps, and median achieved~$\lambda $, for \todo {two} configurations of values for the local-search parameters~\todo {$\alpha $ and~$\beta $}, over~$\RunsSLS $~independent runs per instance, with a timeout of $\TimeoutSLS $~CPU seconds per run. The right-most column gives the number of candidate solutions the outlined exact algorithm has to examine per second in order to match the runtime performance of the seemingly best configuration of values for the local-search parameters, namely \todo {$\Tuple {\alpha ,\beta }=\Tuple {20,8}$}, if the instance was solved to proven optimality, and `n/a' for `non-applicable' otherwise. \todo {(The sample performance of this demo report is made up!)}}{table.2}{}}
\@writefile{toc}{\contentsline {paragraph}{Task~d: Exact Algorithm.}{6}{section*.15}\protected@file@percent }
\bibstyle{abbrv}
\bibdata{ad3}
\newlabel{eq:emc2}{{2}{7}{More \LaTeX \ and Technical Writing Advice}{equation.0.2}{}}
\newlabel{item:that}{{2}{7}{More \LaTeX \ and Technical Writing Advice}{Item.14}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces A binary search tree (on the left), a binary min-heap (in the middle), and a binomial tree of rank $3$ (on the right).}}{8}{figure.2}\protected@file@percent }
\newlabel{fig:trees}{{2}{8}{A binary search tree (on the left), a binary min-heap (in the middle), and a binomial tree of rank $3$ (on the right)}{figure.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces The typesetting of elementary mathematics. Note very carefully when italics are used by \LaTeX \ and when not, as well as all the horizontal and vertical spacing performed by \LaTeX .}}{10}{table.3}\protected@file@percent }
\newlabel{tab:maths}{{3}{10}{The typesetting of elementary mathematics. Note very carefully when italics are used by \LaTeX \ and when not, as well as all the horizontal and vertical spacing performed by \LaTeX }{table.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Spacing rules of English}}{10}{table.4}\protected@file@percent }
\newlabel{tab:spacing}{{4}{10}{Spacing rules of English}{table.4}{}}
